(this["webpackJsonpps-react-johnobla"]=this["webpackJsonpps-react-johnobla"]||[]).push([[0],[,,,,function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));t(41);var r=t(0),a=(t(1),function(e){var n=e.percent,t=e.width,a=e.height,o=void 0===a?5:a;return Object(r.jsx)("div",{className:"ProgressBar",style:{width:t},children:Object(r.jsx)("div",{className:"ProgressBar__bar",style:{width:parseInt(t*(n/100),10),height:o,backgroundColor:100===n?"green":n>50?"lightgreen":"red"}})})})},function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));t(42);var r=t(0),a=t(2),o=t(10),s=(t(1),t(6)),i=function(e){var n=e.htmlId,t=e.name,i=e.label,l=e.type,p=void 0===l?"text":l,c=e.required,d=void 0!==c&&c,u=e.onChange,m=e.placeholder,h=e.value,g=e.error,b=e.children,f=Object(o.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return Object(r.jsxs)("div",{className:"TextInput",children:[Object(r.jsx)(s.a,{htmlFor:n,label:i,required:d}),Object(r.jsx)("input",Object(a.a)({className:"TextInput__input".concat(g&&"--has-error"),id:n,type:p,name:t,placeholder:m,value:h,onChange:u},f)),b,g&&Object(r.jsx)("div",{className:"TextInput__error",children:g})]})}},function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));t(39);var r=t(0),a=(t(1),function(e){var n=e.htmlFor,t=e.label,a=e.required,o=void 0!==a&&a;return Object(r.jsxs)("label",{className:"Label",htmlFor:n,children:[t," ",o&&Object(r.jsx)("span",{className:"Label__required",children:" *"})]})})},,function(e,n,t){"use strict";t.d(n,"a",(function(){return u}));t(40);var r=t(2),a=t(0),o=t(3),s=t(10),i=t(1),l=function(e){var n=Object(i.useState)(e),t=Object(o.a)(n,2),r=t[0],a=t[1];return[r,function(){return a(!r)}]},p=t(4),c=t(9),d=t(5),u=function(e){var n=e.htmlId,t=e.value,i=e.label,u=void 0===i?"Password":i,m=e.error,h=e.onChange,g=e.placeholder,b=e.maxLength,f=void 0===b?50:b,x=e.showPasswordInitially,y=void 0!==x&&x,j=e.quality,w=Object(s.a)(e,["htmlId","value","label","error","onChange","placeholder","maxLength","showPasswordInitially","quality"]),v=l(y),P=Object(o.a)(v,2),O=P[0],I=P[1];return Object(a.jsxs)(d.a,Object(r.a)(Object(r.a)({htmlId:n,label:u,placeholder:g,type:O?"text":"password",onChange:h,value:t,maxLength:f,error:m,required:!0},w),{},{children:[Object(a.jsx)("button",{className:"PasswordInput__toggle",onClick:function(e){I(),e&&e.preventDefault()},children:Object(a.jsx)(c.a,{})}),t.length>0&&j&&Object(a.jsx)(p.a,{percent:j,width:130})]}))}},function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));var r=t(0),a=(t(1),function(){return Object(r.jsx)("svg",{width:"16",height:"16",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 22 22",children:Object(r.jsxs)("g",{transform:"matrix(.02146 0 0 .02146 1 1)",fill:"#4d4d4d",children:[Object(r.jsx)("path",{d:"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1"}),Object(r.jsx)("circle",{cx:"466.08",cy:"466.02",r:"134.5"})]})})})},,function(e,n){e.exports=[{name:"EyeIcon",description:"SVG Eye Icon",code:'import React from \'react\';\n\n/** SVG Eye Icon */\nconst EyeIcon = () => (\n  // Attribution: Fabi\xe1n Alexis at https://commons.wikimedia.org/wiki/File:Antu_view-preview.svg\n  <svg\n    width="16"\n    height="16"\n    xmlns="http://www.w3.org/2000/svg"\n    viewBox="0 0 22 22"\n  >\n    <g transform="matrix(.02146 0 0 .02146 1 1)" fill="#4d4d4d">\n      <path d="m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1" />\n      <circle cx="466.08" cy="466.02" r="134.5" />\n    </g>\n  </svg>\n);\nexport default EyeIcon;\n',examples:[{name:"ExampleEyeIcon",description:"EyeIcon in action",code:"import React from 'react';\nimport EyeIcon from 'ps-react/EyeIcon';\n\n/** EyeIcon in action */\nconst ExampleEyeIcon = () => <EyeIcon />;\nexport default ExampleEyeIcon;\n"}]},{name:"HelloWorld",description:"A simple component that says Hello with a custom message.",props:{message:{type:{name:"string"},required:!1,description:"Message to display",defaultValue:{value:"'World'",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** A simple component that says Hello with a custom message. */\nconst HelloWorld = ({ message }) => {\n  return <div>Hello {message}</div>;\n};\n\nHelloWorld.propTypes = {\n  /** Message to display */\n  message: PropTypes.string,\n};\n\nHelloWorld.defaultProps = {\n  message: 'World',\n};\n\nexport default HelloWorld;\n",examples:[{name:"ExampleHelloWorld",description:"Greets people visiting this site",code:"import HelloWorld from 'ps-react/HelloWorld/';\n\n/** Greets people visiting this site */\nconst ExampleHelloWorld = () => (\n  <HelloWorld message=\" everyone, thanks for visiting my site!\" />\n);\n\nexport default ExampleHelloWorld;\n"}]},{name:"Label",description:"Label with required field display, htmlFor and block styling",props:{htmlFor:{type:{name:"string"},required:!0,description:"HTML ID for associated input"},label:{type:{name:"string"},required:!0,description:"Label text"},required:{type:{name:"bool"},required:!1,description:"Display asterisk after label if true",defaultValue:{value:"false",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Label with required field display, htmlFor and block styling */\nconst Label = ({ htmlFor, label, required = false }) => (\n  <label className=\"Label\" htmlFor={htmlFor}>\n    {label} {required && <span className=\"Label__required\"> *</span>}\n  </label>\n);\n\nLabel.propTypes = {\n  /** HTML ID for associated input */\n  htmlFor: PropTypes.string.isRequired,\n\n  /** Label text */\n  label: PropTypes.string.isRequired,\n\n  /** Display asterisk after label if true */\n  required: PropTypes.bool,\n};\n\nexport default Label;\n",examples:[{name:"ExampleOptional",description:"Optional label",code:"import React from 'react';\nimport Label from 'ps-react/Label';\n\n/** Optional label */\nconst ExampleOptional = () => {\n  return <Label htmlFor=\"address-line-2\" label=\"Address Line 2\" />;\n};\n\nexport default ExampleOptional;\n"},{name:"ExampleRequired",description:"Required label",code:"import React from 'react';\nimport Label from 'ps-react/Label';\n\n/** Required label */\nconst ExampleRequired = () => {\n  return <Label htmlFor=\"address-line-1\" label=\"Address Line 1\" required />;\n};\n\nexport default ExampleRequired;\n"}]},{name:"PasswordInput",description:"Password inpuit with integratedlabel, quality tips, and show password toggle.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used"},value:{type:{name:"any"},required:!1,description:"Password Value"},label:{type:{name:"string"},required:!1,description:"Input label",defaultValue:{value:"'Password'",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function called when password input value changes"},maxLength:{type:{name:"number"},required:!1,description:"Max password length accepted",defaultValue:{value:"50",computed:!1}},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when no password is entered"},showPasswordInitially:{type:{name:"bool"},required:!1,description:"When set to true, shows the toggle for displaying the currently entered password",defaultValue:{value:"false",computed:!1}},quality:{type:{name:"number"},required:!1,description:"Displaypassword quality visually via ProgressBar, accepts a number between 0 and 100"},error:{type:{name:"string"},required:!1,description:"Validation error to display"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport useToggleBool from '../../hooks/useToggleBool';\nimport ProgressBar from '../ProgressBar';\nimport EyeIcon from '../EyeIcon';\nimport TextInput from '../TextInput';\n\n/** Password inpuit with integratedlabel, quality tips, and show password toggle. */\nconst PasswordInput = ({\n  htmlId,\n  value,\n  label = 'Password',\n  error,\n  onChange,\n  placeholder,\n  maxLength = 50,\n  showPasswordInitially = false,\n  quality,\n  ...props\n}) => {\n  const [showPassword, toggleShowPassword] = useToggleBool(\n    showPasswordInitially\n  );\n\n  const handleToggle = event => {\n    toggleShowPassword();\n    if (event) event.preventDefault();\n  };\n\n  return (\n    <TextInput\n      htmlId={htmlId}\n      label={label}\n      placeholder={placeholder}\n      type={showPassword ? 'text' : 'password'}\n      onChange={onChange}\n      value={value}\n      maxLength={maxLength}\n      error={error}\n      required\n      {...props}\n    >\n      {\n        <button className=\"PasswordInput__toggle\" onClick={handleToggle}>\n          <EyeIcon />\n        </button>\n      }\n      {value.length > 0 && quality && (\n        <ProgressBar percent={quality} width={130} />\n      )}\n    </TextInput>\n  );\n};\n\nPasswordInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used*/\n  name: PropTypes.string.isRequired,\n\n  /** Password Value */\n  value: PropTypes.any,\n\n  /** Input label */\n  label: PropTypes.string,\n\n  /** Function called when password input value changes */\n  onChange: PropTypes.func.isRequired,\n\n  /** Max password length accepted */\n  maxLength: PropTypes.number,\n\n  /** Placeholder to display when no password is entered */\n  placeholder: PropTypes.string,\n\n  /** When set to true, shows the toggle for displaying the currently entered password */\n  showPasswordInitially: PropTypes.bool,\n\n  /** Displaypassword quality visually via ProgressBar, accepts a number between 0 and 100 */\n  quality: PropTypes.number,\n\n  /** Validation error to display */\n  error: PropTypes.string,\n};\n\nexport default PasswordInput;\n",examples:[{name:"ExampleAllFeatures",description:"",code:"import React, { useState } from 'react';\nimport PasswordInput from '../../../components/PasswordInput';\n\nconst ExampleAllFeatures = props => {\n  const [password, setPassword] = useState('');\n\n  const getQuality = () => (password.length > 10 ? 100 : password.length * 10);\n\n  const handleChange = event => setPassword(event.target.value);\n\n  return (\n    <div>\n      <PasswordInput\n        htmlId=\"password-input-example-all-features\"\n        name=\"password\"\n        onChange={handleChange}\n        value={password}\n        minLength={8}\n        placeholder=\"Enter password\"\n        showPasswordInitially\n        quality={getQuality()}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default ExampleAllFeatures;\n"}]},{name:"ProgressBar",description:"Progress bar that scales and changes color based on percentage",props:{percent:{type:{name:"number"},required:!0,description:"Percent of progress completed"},width:{type:{name:"number"},required:!0,description:"Bar Width"},height:{type:{name:"number"},required:!1,description:"Bar Height",defaultValue:{value:"5",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Progress bar that scales and changes color based on percentage */\nconst ProgressBar = ({ percent, width, height = 5 }) => {\n  const getColor = () => {\n    if (percent === 100) return 'green';\n\n    return percent > 50 ? 'lightgreen' : 'red';\n  };\n\n  const getWidthAsPercentOfTotalWidth = () =>\n    parseInt(width * (percent / 100), 10);\n\n  return (\n    <div className=\"ProgressBar\" style={{ width }}>\n      <div\n        className=\"ProgressBar__bar\"\n        style={{\n          width: getWidthAsPercentOfTotalWidth(),\n          height,\n          backgroundColor: getColor(),\n        }}\n      />\n    </div>\n  );\n};\n\nProgressBar.propTypes = {\n  /** Percent of progress completed */\n  percent: PropTypes.number.isRequired,\n\n  /** Bar Width */\n  width: PropTypes.number.isRequired,\n\n  /** Bar Height */\n  height: PropTypes.number,\n};\n\nexport default ProgressBar;\n",examples:[{name:"Example100Percent",description:"100% progress and height 20px",code:"import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 100% progress and height 20px */\nconst Example100Percent = () => {\n  return <ProgressBar percent={100} width={150} height={20} />;\n};\n\nexport default Example100Percent;\n"},{name:"Example10Percent",description:"10% progress",code:"import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 10% progress */\nconst Example10Percent = () => {\n  return <ProgressBar percent={10} width={150} />;\n};\n\nexport default Example10Percent;\n"},{name:"Example70Percent",description:"70% progress",code:"import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 70% progress */\nconst Example70Percent = () => {\n  return <ProgressBar percent={70} width={150} />;\n};\n\nexport default Example70Percent;\n"}]},{name:"RegistrationForm",description:"Registration form with built-in validation",props:{confirmationMessage:{type:{name:"string"},required:!1,description:"Message displayed upon successful submission",defaultValue:{value:"'Thanks for registering!'",computed:!1}},onSubmit:{type:{name:"func"},required:!0,description:"Called when form is submitted"},minPasswordLength:{type:{name:"number"},required:!1,description:"Minimum password length",defaultValue:{value:"8",computed:!1}}},code:"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PasswordInput from '../PasswordInput';\nimport TextInput from '../TextInput';\n\n/** Registration form with built-in validation */\nconst RegistrationForm = ({\n  minPasswordLength = 8,\n  onSubmit,\n  confirmationMessage = 'Thanks for registering!',\n}) => {\n  const [user, setUser] = useState({ email: '', password: '' });\n  const [errors, setErrors] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleChange = event =>\n    setUser({ ...user, [event.target.name]: event.target.value });\n\n  /** Returns a number from 0 to 100 that represents password quality.\n   * For simplicity, just returning % of min length entered.\n   * Could enhance with checks for number, special char, unique characters, etc.\n   */\n  const passwordQuality = password => {\n    if (!password) return null;\n    if (password.length >= minPasswordLength) return 100;\n\n    const percentOfMinLength = parseInt(\n      (password.length / minPasswordLength) * 100,\n      10\n    );\n\n    return percentOfMinLength;\n  };\n\n  const validate = ({ email, password }) => {\n    setErrors({});\n\n    if (!email) {\n      setErrors(prevErrors => ({ ...prevErrors, email: 'Email required' }));\n    }\n    console.log(errors);\n\n    if (password.length < minPasswordLength) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        password: `Password must be at least ${minPasswordLength} characters.`,\n      }));\n    }\n    console.log(errors);\n\n    const isValidForm = errors.length === 0;\n\n    return isValidForm;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isValidForm = validate(user);\n    if (isValidForm) {\n      onSubmit(user);\n      setSubmitted(true);\n    }\n  };\n\n  return submitted ? (\n    <h2>{confirmationMessage}</h2>\n  ) : (\n    <form>\n      <TextInput\n        htmlId=\"RegistrationForm__email\"\n        name=\"email\"\n        onChange={handleChange}\n        label=\"Email\"\n        value={user.email}\n        error={errors.email}\n        required\n      />\n\n      <PasswordInput\n        htmlId=\"RegistrationForm__password\"\n        name=\"password\"\n        value={user.password}\n        onChange={handleChange}\n        quality={passwordQuality(user.password)}\n        showPasswordInitially\n        maxLength={50}\n        error={errors.password}\n      />\n\n      <button type=\"submit\" onClick={handleSubmit}>\n        Register\n      </button>\n    </form>\n  );\n};\n\nRegistrationForm.propTypes = {\n  /** Message displayed upon successful submission */\n  confirmationMessage: PropTypes.string,\n\n  /** Called when form is submitted */\n  onSubmit: PropTypes.func.isRequired,\n\n  /** Minimum password length */\n  minPasswordLength: PropTypes.number,\n};\n\nexport default RegistrationForm;\n",examples:[{name:"ExampleRegistrationForm",description:"Registration form with default options, that logs user to console",code:"import React from 'react';\nimport RegistrationForm from 'ps-react/RegistrationForm';\n\n/** Registration form with default options, that logs user to console */\nconst ExampleRegistrationForm = () => {\n  const onSubmit = user => console.log(user);\n\n  return <RegistrationForm onSubmit={onSubmit} />;\n};\n\nexport default ExampleRegistrationForm;\n"}]},{name:"TextInput",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used"},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:"'text'",computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call on change"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\nconst TextInput = ({\n  htmlId,\n  name,\n  label,\n  type = 'text',\n  required = false,\n  onChange,\n  placeholder,\n  value,\n  error,\n  children,\n  ...props\n}) => (\n  <div className=\"TextInput\">\n    <Label htmlFor={htmlId} label={label} required={required} />\n    <input\n      className={`TextInput__input${error && '--has-error'}`}\n      id={htmlId}\n      type={type}\n      name={name}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n      {...props}\n    />\n    {children}\n    {error && <div className=\"TextInput__error\">{error}</div>}\n  </div>\n);\n\nTextInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used*/\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(['text', 'number', 'password']),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call on change */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node,\n};\n\nexport default TextInput;\n",examples:[{name:"ExampleError",description:"Required TextBox with error",code:'import React from \'react\';\nimport TextInput from \'ps-react/TextInput\';\n\n/** Required TextBox with error */\nconst ExampleOptional = () => {\n  return (\n    <TextInput\n      htmlId="example-optional"\n      label="First Name"\n      name="firstname"\n      onChange={() => {}}\n      required\n      error="First name is required"\n    />\n  );\n};\n\nexport default ExampleOptional;\n'},{name:"ExampleOptional",description:"Optional TextBox",code:'import React from \'react\';\nimport TextInput from \'ps-react/TextInput\';\n\n/** Optional TextBox */\nconst ExampleOptional = () => {\n  return (\n    <TextInput\n      htmlId="example-optional"\n      label="First Name"\n      name="firstname"\n      onChange={() => {}}\n    />\n  );\n};\n\nexport default ExampleOptional;\n'}]}]},,function(e,n,t){"use strict";t.r(n);var r=t(0),a=(t(1),t(9));n.default=function(){return Object(r.jsx)(a.a,{})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=(t(1),t(6));n.default=function(){return Object(r.jsx)(a.a,{htmlFor:"address-line-2",label:"Address Line 2"})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=(t(1),t(6));n.default=function(){return Object(r.jsx)(a.a,{htmlFor:"address-line-1",label:"Address Line 1",required:!0})}},function(e,n,t){"use strict";t.r(n);var r=t(2),a=t(0),o=t(3),s=t(1),i=t(8);n.default=function(e){var n=Object(s.useState)(""),t=Object(o.a)(n,2),l=t[0],p=t[1];return Object(a.jsx)("div",{children:Object(a.jsx)(i.a,Object(r.a)({htmlId:"password-input-example-all-features",name:"password",onChange:function(e){return p(e.target.value)},value:l,minLength:8,placeholder:"Enter password",showPasswordInitially:!0,quality:l.length>10?100:10*l.length},e))})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=(t(1),t(4));n.default=function(){return Object(r.jsx)(a.a,{percent:100,width:150,height:20})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=(t(1),t(4));n.default=function(){return Object(r.jsx)(a.a,{percent:10,width:150})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=(t(1),t(4));n.default=function(){return Object(r.jsx)(a.a,{percent:70,width:150})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=(t(1),t(5));n.default=function(){return Object(r.jsx)(a.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required"})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=(t(1),t(5));n.default=function(){return Object(r.jsx)(a.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){}})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=(t(1),function(e){var n=e.message;return Object(r.jsxs)("div",{children:["Hello ",n]})});a.defaultProps={message:"World"};var o=a;n.default=function(){return Object(r.jsx)(o,{message:" everyone, thanks for visiting my site!"})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t(1),o=t(7),s=t(2),i=t(3),l=t(8),p=t(5),c=function(e){var n,t=e.minPasswordLength,c=void 0===t?8:t,d=e.onSubmit,u=e.confirmationMessage,m=void 0===u?"Thanks for registering!":u,h=Object(a.useState)({email:"",password:""}),g=Object(i.a)(h,2),b=g[0],f=g[1],x=Object(a.useState)({}),y=Object(i.a)(x,2),j=y[0],w=y[1],v=Object(a.useState)(!1),P=Object(i.a)(v,2),O=P[0],I=P[1],q=function(e){return f(Object(s.a)(Object(s.a)({},b),{},Object(o.a)({},e.target.name,e.target.value)))};return O?Object(r.jsx)("h2",{children:m}):Object(r.jsxs)("form",{children:[Object(r.jsx)(p.a,{htmlId:"RegistrationForm__email",name:"email",onChange:q,label:"Email",value:b.email,error:j.email,required:!0}),Object(r.jsx)(l.a,{htmlId:"RegistrationForm__password",name:"password",value:b.password,onChange:q,quality:(n=b.password,n?n.length>=c?100:parseInt(n.length/c*100,10):null),showPasswordInitially:!0,maxLength:50,error:j.password}),Object(r.jsx)("button",{type:"submit",onClick:function(e){e.preventDefault(),function(e){var n=e.email,t=e.password;return w({}),n||w((function(e){return Object(s.a)(Object(s.a)({},e),{},{email:"Email required"})})),console.log(j),t.length<c&&w((function(e){return Object(s.a)(Object(s.a)({},e),{},{password:"Password must be at least ".concat(c," characters.")})})),console.log(j),0===j.length}(b)&&(d(b),I(!0))},children:"Register"})]})};n.default=function(){return Object(r.jsx)(c,{onSubmit:function(e){return console.log(e)}})}},,,,,,,,,,,,function(e,n,t){},,function(e,n,t){},function(e,n,t){var r={"./EyeIcon/ExampleEyeIcon":13,"./EyeIcon/ExampleEyeIcon.js":13,"./HelloWorld/ExampleHelloWorld":22,"./HelloWorld/ExampleHelloWorld.js":22,"./Label/ExampleOptional":14,"./Label/ExampleOptional.js":14,"./Label/ExampleRequired":15,"./Label/ExampleRequired.js":15,"./PasswordInput/ExampleAllFeatures":16,"./PasswordInput/ExampleAllFeatures.js":16,"./ProgressBar/Example100Percent":17,"./ProgressBar/Example100Percent.js":17,"./ProgressBar/Example10Percent":18,"./ProgressBar/Example10Percent.js":18,"./ProgressBar/Example70Percent":19,"./ProgressBar/Example70Percent.js":19,"./RegistrationForm/ExampleRegistrationForm":23,"./RegistrationForm/ExampleRegistrationForm.js":23,"./TextInput/ExampleError":20,"./TextInput/ExampleError.js":20,"./TextInput/ExampleOptional":21,"./TextInput/ExampleOptional.js":21};function a(e){var n=o(e);return t(n)}function o(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=38},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t(1),o=t.n(a),s=t(24),i=t.n(s),l=(t(35),t(3)),p=function(e){var n=e.components;return Object(r.jsx)("ul",{className:"navigation",children:n.map((function(e){return Object(r.jsx)("li",{children:Object(r.jsx)("a",{href:"#".concat(e),children:e})},e)}))})},c=t(25),d=t(26),u=t(29),m=t(28),h=t(27),g=t.n(h),b=(t(37),function(e){var n=e.children;return Object(a.useEffect)((function(){return g.a.highlightAll()}),[]),Object(r.jsx)("pre",{children:Object(r.jsx)("code",{className:"language-javascript",children:n})})}),f=function(e){Object(u.a)(a,e);var n=Object(m.a)(a);function a(e){var t;return Object(c.a)(this,a),(t=n.call(this,e)).toggleCode=function(e){e.preventDefault(),t.setState((function(e){return{showCode:!e.showCode}}))},t.state={showCode:!1},t}return Object(d.a)(a,[{key:"render",value:function(){var e=this.state.showCode,n=this.props.example,a=n.code,o=n.description,s=n.name,i=t(38)("./".concat(this.props.componentName,"/").concat(s)).default;return Object(r.jsxs)("div",{className:"example",children:[o&&Object(r.jsx)("h4",{children:o}),Object(r.jsx)(i,{}),Object(r.jsx)("p",{children:Object(r.jsxs)("button",{href:"",onClick:this.toggleCode,children:[e?"Hide":"Show"," Code"]})}),e&&Object(r.jsx)(b,{children:a})]})}}]),a}(o.a.Component),x=function(e){var n=e.props;return Object(r.jsxs)("table",{className:"props",children:[Object(r.jsx)("thead",{children:Object(r.jsxs)("tr",{children:[Object(r.jsx)("th",{children:"Name"}),Object(r.jsx)("th",{children:"Description"}),Object(r.jsx)("th",{children:"Type"}),Object(r.jsx)("th",{children:"Default"}),Object(r.jsx)("th",{children:"Required"})]})}),Object(r.jsx)("tbody",{children:Object.keys(n).map((function(e){return Object(r.jsxs)("tr",{children:[Object(r.jsx)("td",{children:e}),Object(r.jsx)("td",{children:n[e].description}),Object(r.jsx)("td",{children:n[e].type.name}),Object(r.jsx)("td",{children:n[e].defaultValue&&n[e].defaultValue.value}),Object(r.jsx)("td",{children:n[e].required&&"X"})]},e)}))})]})},y=function(e){var n=e.component,t=n.name,a=n.description,o=n.props,s=n.examples;return Object(r.jsxs)("div",{className:"componentpage",children:[Object(r.jsx)("h2",{children:t}),Object(r.jsx)("p",{children:a}),Object(r.jsxs)("h3",{children:["Example",s.length>1&&"s"]}),s.length>0?s.map((function(e){return Object(r.jsx)(f,{example:e,componentName:t},e.name)})):"No examples exist.",Object(r.jsx)("h3",{children:"Props"}),o?Object(r.jsx)(x,{props:o}):"This component accepts no props."]})},j=t(11),w=t.n(j),v=function(){var e=function(){return window.location.hash.substr(1)},n=Object(a.useState)(e()),t=Object(l.a)(n,2),o=t[0],s=t[1];Object(a.useEffect)((function(){return window.addEventListener("hashchange",(function(){return s(e())}))}),[]),console.log(o);var i=o?w.a.filter((function(e){return e.name===o}))[0]:w.a[0];return Object(r.jsxs)("div",{children:[Object(r.jsx)(p,{components:w.a.map((function(e){return e.name}))}),Object(r.jsx)(y,{component:i})]})},P=function(e){e&&e instanceof Function&&t.e(3).then(t.bind(null,44)).then((function(n){var t=n.getCLS,r=n.getFID,a=n.getFCP,o=n.getLCP,s=n.getTTFB;t(e),r(e),a(e),o(e),s(e)}))};i.a.render(Object(r.jsx)(o.a.StrictMode,{children:Object(r.jsx)(v,{})}),document.getElementById("root")),P()}],[[43,1,2]]]);
//# sourceMappingURL=main.87d84329.chunk.js.map